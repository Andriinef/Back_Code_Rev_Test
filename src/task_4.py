"""
Вы менеджер популярной сети ресторанов.
У вас есть два склада, которые обслуживают ваши рестораны.
Вам было поручено просмотреть инвентарь на обоих складах
и предоставить отсортированный полный список всех ваших товаров
между двумя складами.
Ваш помощник написал функцию complete_inventory,
которая принимает 2 массива целых чисел (склад_1 и склад_2)
и 2 целых числа (x и y) и возвращает массив. Массивы склад_1
и склад_2 содержат идентификаторы продуктов вашего инвентаря на складе 1
и складе 2 соответственно, в отсортированном виде.
Целые числа x и y представляют количество инициализированных товаров
на складе_1 и складе_2 соответственно. Также обратите внимание,
что склад_1 будет достаточно большим, чтобы вместить все значения как склада_1,
так и склада_2.
Цель функции — объединить склад_1 и склад_2 в склад_1 таким образом,
чтобы вы получили отсортированный массив идентификаторов продуктов
с обоих складов.
Вы обнаружили некоторые проблемы с функцией, созданной вашим помощником,
и вам нужно отладить эту функцию.
"""


def complete_inventory(warehouse_1, x, warehouse_2, y):
    """
    Объединяет и сортирует инвентарь с двух складов на warehouse_1.

    Аргументы:
        warehouse_1 (list): идентификаторы товаров на складе 1
        (отсортированные).
        x (int): количество инициализированных товаров на warehouse_1.
        warehouse_2 (list): идентификаторы товаров на складе 2
        (отсортированные).
        y (int): Количество инициализированных товаров на warehouse_2.

    Возвращает:
        list: объединенные и отсортированные идентификаторы продуктов
        с обоих складов.

    """
    back_index = len(warehouse_1) - 1
    first_pointer = x - 1
    second_pointer = y - 1

    while second_pointer >= 0:
        # import ipdb; ipdb.set_trace()
        if (
            first_pointer >= 0
            and warehouse_1[first_pointer] > warehouse_2[second_pointer]
        ):
            warehouse_1[back_index] = warehouse_1[first_pointer]
            first_pointer -= 1
        else:
            warehouse_1[back_index] = warehouse_2[second_pointer]
            second_pointer -= 1
        back_index -= 1

    return warehouse_1


warehouse_1 = [2, 3, 4, 0, 0, 0]
x = 3
warehouse_2 = [1, 5, 9]
y = 3
print(complete_inventory(warehouse_1, x, warehouse_2, y))


warehouse_1 = [1, 8, 0, 0, 0]
x = 2
warehouse_2 = [1, 1, 5]
y = 3
print(complete_inventory(warehouse_1, x, warehouse_2, y))
